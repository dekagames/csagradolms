services:
  db:
    image: postgres:latest
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER:-csagradoDb}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-csagrado@123}
      POSTGRES_DB: ${DB_NAME:-csagradoDb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  webapi:
    build:
      context: .
      dockerfile: WebApi/Dockerfile
      target: final
    env_file: .env
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "4040:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ~/.aspnet/https:/https:ro
      
  migrations:
    build:
      context: .
      dockerfile: WebApi/Dockerfile
      target: migrations
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=${DB_NAME};Username=${DB_USER};Password=${DB_PASSWORD}
  
  blazorapp:
    build:
      context: .
      dockerfile: BlazorApp/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      - webapi

volumes:
  postgres_data: