@page "/Register"

<div class="container-fluid" >
    <div class="row">
        <div class="col-xl-6 mx-auto rounded border p-4" style="margin: 60px;">
            <h3 class="text-center mb-3">Register</h3>
            <hr>
            @if (_errors.Length > 0)
            {
                <div class="alert alert-danger" role="alert">
                    <ul>
                        @foreach (var error in _errors)
                        {
                            <li>@error</li>
                        }
                    </ul>
                </div> 
            }
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Email</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="_email"/>
                </div>
            </div>
            
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Senha</label>
                <div class="col-md-8">
                    <input class="form-control" type="password" @bind="_password"/>
                </div>
            </div>
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Confirmar Senha</label>
                <div class="col-md-8">
                    <input class="form-control" type="password" @bind="_confirmPassword"/>
                </div>
            </div>
            <div class="row">
                <div class="offset-md-4 col d-grid">
                    <button class="btn btn-primary" @onclick="RegisterAsync">Cadastrar</button>
                </div>
                <div class="col d-grid">
                    <a class="btn btn-outline-primary" href="/" role="button">Cancelar</a>
                </div>
            </div>
        </div>
    </div>
</div>

@inject AuthenticationStateProvider Provider
@inject NavigationManager NavManager

@code {
    string _email  = string.Empty;
    string _password  = string.Empty;
    string _confirmPassword  = string.Empty;
    string[] _errors = [];

    private async Task RegisterAsync()
    {
        if(_password != _confirmPassword)
        {
            _errors = ["As senhas n√£o coincidem."];
            return;
        }
        
        var authStateProvider = (CustomAuthStateProvider)Provider;
        var registerDto = new RegisterDto
        {
            Email = _email,
            Password = _password
        };
        
        var result = await authStateProvider.RegisterAsync(registerDto);
        if (result.Succeeded)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            _errors = result.Errors;
        }
    }

}